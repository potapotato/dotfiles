[
	{
		"key": "ctrl+shift+c",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "panelFocus && activePanel"
	},
	{
		"key": "ctrl+h",
		"command": "workbench.action.focusActiveEditorGroup",
		"when": "panelFocus && activePanel"
	},
	{
		"key": "ctrl+j",
		"command": "vim.remap",
		"when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen",
		"args": {
			"after": [
				"<c-w>",
				"j"
			]
		}
	},
	{
		"key": "ctrl+k",
		"command": "vim.remap",
		"when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen && !panelFocus",
		"args": {
			"after": [
				"<c-w>",
				"k"
			]
		}
	},
	{
		"key": "ctrl+h",
		"command": "vim.remap",
		"when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen && !panelFocus",
		"args": {
			"after": [
				"<c-w>",
				"h"
			]
		}
	},
	{ 
		"key": "ctrl+l",
		"command": "vim.remap",
		"when": "vim.mode == 'Normal' && !suggestWidgetVisible && !inQuickOpen",
		"args": {
			"after": [
				"<c-w>",
				"l"
			]
		}
	},
	{ 
		"key": "tab",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"search.action.focusSearchList"
			]
		},
		"when": "searchViewletFocus"
	},
	{
		"key": "shift+tab",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"search.focus.previousInputBox",
				"search.focus.previousInputBox",
				"search.focus.previousInputBox",
				"search.focus.previousInputBox"
			]
		},
		"when": "hasSearchResult && searchViewletFocus"
	},
	{
		"key": "o",
		"command": "list.select",
		"when": "listFocus && !inputFocus && hasSearchResult && searchViewletFocus"
	},
	{
		"key": "enter",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"list.select",
				"workbench.action.toggleAuxiliaryBar"
			]
		},
		"when": "listFocus && !inputFocus && hasSearchResult && searchViewletFocus"
	},
	{ 
		"key": "e",
		"command": "whichkey.triggerKey",
		"when": "whichkeyVisible && sideBarVisible && explorerViewletVisible",
		"args": {
			"key": "e",
			"when": "sideBarVisible && explorerViewletVisible"
		}
	},
	{ 
		"key": "r",
		"command": "renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "enter",
		"command": "-renameFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "j",
		"command": "list.focusDown",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{ 
		"key": "k",
		"command": "list.focusUp",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenNavigatePrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+shift+j",
		"command": "list.focusDown",
		"when": "panelFocus && activePanel == 'workbench.panel.markers' "
	},
	{
		"key": "ctrl+shift+k",
		"command": "list.focusUp",
		"when": "panelFocus && activePanel == 'workbench.panel.markers' "
	},
	{
		"key": "tab",
		"command": "selectNextSuggestion",
		"when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
	},
	{
		"key": "shift+tab",
		"command": "selectPrevSuggestion",
		"when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
	},
	{
		"key": "shift+tab",
		"command": "workbench.action.quickOpenNavigatePrevious",
		"when": "inQuickOpen"
	},
	{ 
		"key": "enter",
		"command": "list.select",
		"when": "explorerViewletVisible && filesExplorerFocus"
	},
	{
		"key": "o",
		"command": "revealReference",
		"when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
	},
	{ 
		"key": "j",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"list.focusDown"
			]
		},
		"when": "listFocus && !inputFocus && panelFocus && !inDebugRepl && references-view.canNavigate"
	},
	{
		"key": "k",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"list.focusUp"
			]
		},
		"when": "listFocus && !inputFocus && panelFocus && !inDebugRepl && references-view.canNavigate"
	},
	{
		"key": "enter",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"revealReference",
				"closeReferenceSearch"
			]
		},
		"when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
	},
	{
		"key": "enter",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"list.select"
			]
		},
		"when": "panelFocus && !inDebugRepl && activePanel!='workbench.panel.markers' && reference-list.source == 'callHierarchy' "
	},
	{ 
		"key": "enter",
		"command": "extension.multiCommand.execute",
		"args": {
			"sequence": [
				"list.select",
				"workbench.action.togglePanel"
			]
		},
		"when": "panelFocus && !inDebugRepl && activePanel!='workbench.panel.markers' && reference-list.source != 'callHierarchy' "
	},
	{ 
		"key": "l",
		"command": "list.select",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{
		"key": "o",
		"command": "list.toggleExpand",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{ 
		"key": "h",
		"command": "list.collapse",
		"when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
	},
	{ 
		"key": "a",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{
		"key": "shift+a",
		"command": "explorer.newFolder",
		"when": "filesExplorerFocus && !inputFocus"
	},
	{ 
		"key": "d",
		"command": "deleteFile",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
	},
	{ 
		"key": "ctrl+\\",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{ 
		"key": "ctrl+m",
		"command": "workbench.action.toggleMaximizedPanel",
		"when": "terminalFocus"
	},
	{ 
		"key": "ctrl+f",
		"command": "editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{ 
		"key": "ctrl+r",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	
	
	
	
	
	
	
	{
		"key": "ctrl+d",
		"command": "cursorMove",
		"args": {
			"to": "down",
			"by": "line",
			"value": 34
		}
	},
	{
		"key": "ctrl+u",
		"command": "cursorMove",
		"args": {
			"to": "up",
			"by": "line",
			"value": 34
		}
	},
	
	{
		"key": "ctrl+p",
		"command": "workbench.action.togglePanel"
	},
	{
		"key": "ctrl+j",
		"command": "-editor.action.insertLineAfter",
		"when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "-editor.action.showHover",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+tab",
		"command": "-acceptAlternativeSelectedSuggestion",
		"when": "suggestWidgetVisible && textInputFocus && textInputFocus"
	},
	{
		"key": "ctrl+h",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+p",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+h",
		"command": "-java.action.showTypeHierarchy",
		"when": "editorTextFocus && editorLangId == 'java'"
	},
	{
		"key": "ctrl+h",
		"command": "-extension.vim_ctrl+h",
		"when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
	},
	{
		"key": "ctrl+h",
		"command": "-extension.dash.specific",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+e",
		"command": "-workbench.action.quickOpen"
	},
	{
		"key": "ctrl+l",
		"command": "-expandLineSelection",
		"when": "textInputFocus"
	},
	{
		"key": "alt+2",
		"command": "-workbench.action.openEditorAtIndex2"
	},
	{
		"key": "alt+2",
		"command": "workbench.action.toggleAuxiliaryBar"
	},
	{
		"key": "space",
		"command": "-breadcrumbs.revealFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "space",
		"command": "-debug.toggleBreakpoint",
		"when": "breakpointsFocused && !inputFocus"
	},
	{
		"key": "space",
		"command": "-filesExplorer.openFilePreserveFocus",
		"when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
	},
	{
		"key": "space",
		"command": "-list.toggleExpand",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "space",
		"command": "-notification.toggle",
		"when": "notificationFocus"
	},
	{
		"key": "space",
		"command": "-refactorPreview.toggleCheckedState",
		"when": "listFocus && refactorPreview.enabled && !inputFocus"
	},
	{
		"key": "tab",
		"command": "extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
	},
	{
		"key": "tab",
		"command": "-extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "x",
		"command": "magit.discard-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "k",
		"command": "-magit.discard-at-point"
	},
	{
		"key": "-",
		"command": "magit.reverse-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "v",
		"command": "-magit.reverse-at-point"
	},
	{
		"key": "shift+-",
		"command": "magit.reverting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+v",
		"command": "-magit.reverting"
	},
	{
		"key": "shift+o",
		"command": "magit.resetting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+x",
		"command": "-magit.resetting"
	},
	{
		"key": "x",
		"command": "-magit.reset-mixed"
	},
	{
		"key": "ctrl+u x",
		"command": "-magit.reset-hard"
	},
	{
		"key": "y",
		"command": "-magit.show-refs"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+j",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+k",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+h",
		"command": "file-browser.stepOut",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+l",
		"command": "file-browser.stepIn",
		"when": "inFileBrowser"
	},
	{
		"key": "f6",
		"command": "workbench.action.debug.stepOver",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "f8",
		"command": "-workbench.action.debug.stepOver",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "f8",
		"command": "workbench.action.debug.stepOut",
		"when": "debugState == 'stopped'"
	},
	{
		"key": "f6",
		"command": "-workbench.action.debug.pause",
		"when": "debugState == 'running'"
	},
	{
		"key": "f4",
		"command": "workbench.action.debug.stop",
		"when": "inDebugMode && !focusedSessionIsAttach"
	},
	{
		"key": "ctrl+oem_plus",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "ctrl+shift+oem_plus",
		"command": "-workbench.action.zoomIn"
	},
	{
		"key": "enter",
		"command": "-revealReference",
		"when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
	},
	{
		"key": "space",
		"command": "whichkey.show",
		"when": "!inputFocus"
	},
	{
		"key": "alt+backspace",
		"command": "git.stageChange"
	},
	{
		"key": "ctrl+n",
		"command": "editor.action.triggerParameterHints",
		"when": "editorHasSignatureHelpProvider && editorTextFocus"
	},
	{
		"key": "ctrl+m",
		"command": "-editor.action.toggleTabFocusMode"
	},
	{
		"key": "tab",
		"command": "-insertBestCompletion",
		"when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
	},
	{
		"key": "tab",
		"command": "-insertNextSuggestion",
		"when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
	},
	{
		"key": "ctrl+d",
		"command": "-deleteRight",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+d",
		"command": "-workbench.action.debug.run",
		"when": "debuggersAvailable && !inDebugMode && !terminalFocus"
	},
	{
		"key": "alt+o",
		"command": "-C_Cpp.SwitchHeaderSource",
		"when": "editorTextFocus && editorLangId == 'c' || editorTextFocus && editorLangId == 'cpp' || editorTextFocus && editorLangId == 'cuda-cpp'"
	},
	{
		"key": "alt+o",
		"command": "clangd.switchheadersource",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+i",
		"command": "-editor.action.codeAction",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+o",
		"command": "-editor.action.codeAction",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+o",
		"command": "-lineBreakInsert",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+i",
		"command": "extension.vim_ctrl+i",
		"when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
	},
	{
		"key": "ctrl+i",
		"command": "-extension.vim_ctrl+i",
		"when": "editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"
	},
	{
		"key": "ctrl+o",
		"command": "workbench.action.navigateBack",
		"when": "canNavigateBack"
	},
	{
		"key": "ctrl+i",
		"command": "workbench.action.navigateForward",
		"when": "canNavigateForward"
	},
	{
		"key": "cmd+p",
		"command": "workbench.action.showCommands"
	},
	{
		"key": "shift+cmd+a",
		"command": "-workbench.action.showCommands"
	},
	{
		"key": "cmd+r",
		"command": "-workbench.action.reloadWindow",
		"when": "isDevelopment"
	},
	{
		"key": "cmd+r",
		"command": "-jupyter.refreshDataViewer",
		"when": "isWorkspaceTrusted && jupyter.dataViewerActive"
	},
	{
		"key": "cmd+r",
		"command": "-python.refreshTensorBoard",
		"when": "python.hasActiveTensorBoardSession"
	},
	{
		"key": "cmd+r",
		"command": "-editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.openRecent"
	},
	{
		"key": "ctrl+r",
		"command": "-go.test.previous",
		"when": "editorLangId == 'go'"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.tasks.reRunTask"
	},
	{
		"key": "ctrl+r",
		"command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
		"when": "inQuickOpen && inRecentFilesPicker"
	},
	{
		"key": "cmd+r",
		"command": "editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{
		"key": "ctrl+u",
		"command": "-extension.vim_ctrl+u",
		"when": "editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"
	},
	{
		"key": "ctrl+up",
		"command": "-extension.vim_ctrl+up",
		"when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "ctrl+u",
		"command": "-list.focusPageUp",
		"when": "listFocus && !inputFocus"
	}
]
